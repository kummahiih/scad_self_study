translate([0, 0, 0])rotate(0)cube([1,1,1]);
translate([1.0, 0.0, 0.0])rotate(90)cube([1,1,1]);
translate([1.0000000000000002, 1.0, 0.0])rotate(180)cube([2,1,1]);
translate([-0.9999999999999998, 1.0000000000000002, 0.0])rotate(270)cube([3,1,1]);
translate([-1.0000000000000004, -1.9999999999999998, 0.0])rotate(0)cube([5,1,1]);
translate([3.9999999999999996, -2.000000000000001, 0.0])rotate(90)cube([8,1,1]);
translate([4.000000000000002, 6.000000000000001, 0.0])rotate(180)cube([13,1,1]);
translate([-8.999999999999998, 6.000000000000005, 0.0])rotate(270)cube([21,1,1]);
translate([-9.000000000000007, -14.999999999999995, 0.0])rotate(0)cube([34,1,1]);
translate([24.999999999999993, -15.00000000000001, 0.0])rotate(90)cube([55,1,1]);
translate([25.000000000000018, 39.999999999999986, 0.0])rotate(180)cube([89,1,1]);
translate([-63.999999999999986, 40.00000000000004, 0.0])rotate(270)cube([144,1,1]);
translate([-64.00000000000033, -103.99999999999996, 0.0])rotate(0)cube([233,1,1]);
translate([168.99999999999966, -104.00000000000013, 0.0])rotate(90)cube([377,1,1]);
translate([168.99999999999923, 272.9999999999999, 0.0])rotate(180)cube([610,1,1]);
translate([-441.0000000000008, 273.0000000000004, 0.0])rotate(270)cube([987,1,1]);
translate([-441.0000000000034, -713.9999999999995, 0.0])rotate(0)cube([1597,1,1]);
translate([1155.9999999999966, -714.0000000000011, 0.0])rotate(90)cube([2584,1,1]);
translate([1155.9999999999948, 1869.9999999999989, 0.0])rotate(180)cube([4181,1,1]);
translate([-3025.0000000000055, 1870.0000000000034, 0.0])rotate(270)cube([6765,1,1]);
